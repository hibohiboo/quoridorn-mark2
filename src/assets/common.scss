@mixin flex-box(
  $direction: row,
  $horizontal: normal,
  $vertical: normal,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: if($direction == row, $horizontal, $vertical);
  align-items: if($direction == row, $vertical, $horizontal);
  flex-wrap: $wrap;
  align-content: flex-start;
}

@mixin inline-flex-box(
  $direction: row,
  $horizontal: flex-start,
  $vertical: flex-start,
  $wrap: nowrap
) {
  display: inline-flex;
  flex-direction: $direction;
  justify-content: if($direction == row, $horizontal, $vertical);
  align-items: if($direction == row, $vertical, $horizontal);
  flex-wrap: $wrap;
  align-content: flex-start;
}

@mixin basic-map-object() {
  @include flex-box(row, center, center);
  position: absolute;
  left: 0;
  top: 0;
  box-sizing: border-box;
  white-space: nowrap;
  font-size: 12px;
  cursor: crosshair;
  /* JavaScriptで設定されるプロパティ
  width
  height
  transform
  z-index
  outline-offset
  outline
  */

  .tag {
    display: none;
    position: absolute;
    right: 0;
    top: 0;
    transform: translateY(-100%);
  }

  .lock-info {
    position: absolute;
    outline-offset: 5px;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    outline: 5px dashed green;
  }

  .lock-info-message {
    position: absolute;
    left: 0;
    top: 0;
    transform: translateY(-100%);
    border: 1px solid gray;
    border-radius: 0.2rem 0.2rem 0 0;
    background-color: white;
    padding-left: 0.2rem;
  }

  &.other-player-last-modify {
    transition: transform 0.3s linear;
  }

  &.transitioning {
    pointer-events: none;
  }

  &.hover {
    z-index: 599999999 !important;
  }

  &.moving,
  &.rolling {
    z-index: 999999999 !important;
  }

  &.focus:after {
    outline: dotted 5px red;
    outline-offset: 3px;
    animation: blink-focus 1s ease-in-out infinite alternate;
  }

  &:before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    box-sizing: border-box;
    background-color: var(--back-color);
    background-image: var(--image);
    background-size: var(--image-background-size);
    background-repeat: no-repeat;
    background-position: var(--image-background-position);
    transform: var(--image-direction);
  }

  &:after {
    content: var(--text);
    white-space: pre-wrap;
    word-break: break-all;
    color: var(--font-color);
    @include flex-box(row, center, center);
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    border-radius: 5px;
    /* JavaScriptで設定されるプロパティ
    box-shadow
    */
  }
}

@mixin btn-skyblue() {
  &.checked {
    background-color: var(--uni-color-cream);
  }

  &.readonly,
  &.disabled {
    cursor: not-allowed;
    background-color: var(--uni-color-light-gray);
  }

  &:not(.readonly):not(.disabled) {
    cursor: pointer;

    &:hover {
      background-color: var(--uni-color-light-skyblue) !important;
    }

    &:active {
      background-color: var(--uni-color-skyblue) !important;
    }
  }
}

@mixin btn-pink() {
  &.checked {
    background-color: var(--uni-color-cream);
  }

  &.readonly,
  &.disabled {
    cursor: not-allowed;
    background-color: var(--uni-color-light-gray);
  }

  &:not(.readonly):not(.disabled) {
    cursor: pointer;

    &:hover {
      background-color: var(--uni-color-light-pink) !important;
    }

    &:active {
      background-color: var(--uni-color-pink) !important;
    }
  }
}

@mixin lock-view() {
  position: relative;

  &:before {
    content: "";
    display: inline-block;
    position: absolute;
    background-image: linear-gradient(
      -45deg,
      transparent 25%,
      var(--uni-color-light-pink) 25%,
      var(--uni-color-light-pink) 50%,
      transparent 50%,
      transparent 75%,
      var(--uni-color-light-pink) 75%,
      var(--uni-color-light-pink)
    );
    opacity: 0.4;
    background-size: 1em 1em;
    background-attachment: local;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 9999999998;
  }

  &:after {
    @include inline-flex-box(row, center, center);
    outline: 1px solid var(--uni-color-black);
    outline-offset: -1px;
    position: absolute;
    left: 0.2em;
    padding: 0.2em 0.6em;
    top: 0;
    bottom: 0;
    height: 1em;
    margin: auto;
    background-color: var(--uni-color-white);
    color: var(--uni-color-black);
    z-index: 9999999999;
  }
}

@keyframes blink-focus {
  0% {
    outline-color: red;
  }
  100% {
    outline-color: transparent;
  }
}

.v-box {
  @include flex-box(column, stretch, flex-start);
  position: relative;
}

.h-box {
  @include flex-box(row, flex-start, stretch);
  position: relative;
}

.flex-max {
  flex: 1;
}

.button-area {
  @include flex-box(row, center, center);
  position: relative;
  margin-top: 0.5rem;

  &.margin-none {
    margin-top: 0;
  }

  &.margin-bottom {
    margin-top: 0;
    margin-bottom: 0.5rem;
  }

  &.left {
    @include flex-box(row, flex-start, center);
  }

  &.space-between {
    @include flex-box(row, space-between, center);
  }

  &.space-around {
    @include flex-box(row, space-around, center);
  }

  > *:not(:first-child) {
    margin-left: 0.5rem;
  }
}

.label-input {
  font-weight: bold;

  &:after {
    content: "：";
  }
}
